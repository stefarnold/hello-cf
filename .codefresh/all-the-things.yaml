# Must set the following environment variables in the pipeline:
#
# - DEPLOY_STAGING_PIPELINE_ID
# - CHART_REPO_URL
# - HELM_REPO_USERNAME (encrypted)
# - HELM_REPO_PASSWORD (encrypted)
#
version: "1.0"
steps:

  CheckVersions:
    image: alpine/git:1.0.4
    commands:
    - export DOCKER_VERSION=$(cat VERSION)
    - export CHART_VERSION=$(cat hello-cf/Chart.yaml | grep -m 1 ^version:| awk '{print $2}')
    - export PUSH_DOCKER=$(if [[ "$(git log --format=\"%H\" -n 1 -- VERSION)" == "${{CF_REVISION}}" ]]; then echo "false"; else echo "true"; fi)
    - export PUSH_HELM=$([[ "$(git log --format=\"%H\" -n 1 -- hello-cf/Chart.yaml)" == "${{CF_REVISION}}" ]] || echo "false" && echo "true")
    - export TRIGGER_DEPLOY=$( ( [[ "$PUSH_DOCKER" == "true" ]] || [[ "$PUSH_HELM" == "true" ]] ) || echo "false" && echo "true")
    - cf_export DOCKER_VERSION=$DOCKER_VERSION CHART_VERSION=$CHART_VERSION PUSH_DOCKER=$PUSH_DOCKER PUSH_HELM=$PUSH_HELM TRIGGER_DEPLOY=$TRIGGER_DEPLOY

  TestCode:
    image: alpine/git:1.0.4
    commands:
    - echo "everything fine here, move along!"

  BuildDocker:
    type: build
    image_name: stefsuse/hellocf
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}'

  PushDocker:
    type: push
    candidate: '${{BuildDocker}}'
    tag: '${{DOCKER_VERSION}}'
    registry: StefHub
    when:
      condition:
        all:
          VersionChanged: '"${{PUSH_DOCKER}}" == "true"'

  TestChart:
    image: codefresh/cfstep-helm:2.7.2
    commands:
    - echo "everything fine here, move along!"

  PackageChart:
    image: codefresh/cfstep-helm:2.7.2
    commands:
    - helm package hello-cf/
    - cf_export CHART_PACKAGE=$(find . -name *.tgz)

  PushChart:
    image: codefresh/cfstep-helm:2.7.2
    commands:
    - helm repo add suse $HELM_REPO_URL
    - helm push ${{CHART_PACKAGE}} suse
    when:
      condition:
        all:
          ChartYamlChanged: '"${{PUSH_HELM}}" == "true"'

  TriggerDeploy:
    image: codefresh/cli:latest
    commands:
    - export ARGS="-v CUSTOM_image_tag=${{DOCKER_VERSION}} -v CHART_VERSION=${{CHART_VERSION}}"
    - codefresh run $DEPLOY_STAGING_PIPELINE_ID --branch=master --detach $ARGS
    when:
      condition:
        all:
          AnythingPushed: '"${{TRIGGER_DEPLOY}}" == "true"'
